{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://monorepo-features.dev/schemas/feature.v1.json",
  "title": "Feature Definition Schema",
  "description": "Schema for defining features that can be added to TypeScript monorepo projects",
  "type": "object",
  "required": [
    "id",
    "name",
    "description",
    "version",
    "author",
    "category",
    "createdAt",
    "modifiedAt"
  ],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Unique identifier for the feature (lowercase, numbers, hyphens only)"
    },
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "description": "Human-readable name of the feature"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Brief description of what the feature provides"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*)?$",
      "description": "Semantic version of the feature definition"
    },
    "author": {
      "type": "string",
      "description": "Author name or organization"
    },
    "category": {
      "type": "string",
      "enum": [
        "authentication",
        "database",
        "ui-components",
        "utilities",
        "integrations",
        "testing",
        "build-tools",
        "monitoring",
        "security",
        "api"
      ],
      "description": "Category this feature belongs to"
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 date when the feature was created"
    },
    "modifiedAt": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 date when the feature was last modified"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$"
      },
      "uniqueItems": true,
      "description": "Optional tags for categorization and search"
    },
    "isActive": {
      "type": "boolean",
      "default": true,
      "description": "Whether this feature is currently available for installation"
    },
    "deprecated": {
      "type": "boolean",
      "default": false,
      "description": "Whether this feature is deprecated"
    },
    "deprecationMessage": {
      "type": "string",
      "description": "Message to show when feature is deprecated"
    },
    "minNodeVersion": {
      "type": "string",
      "pattern": "^\\d+(\\.\\d+)?(\\.\\d+)?$",
      "description": "Minimum Node.js version required"
    },
    "minTemplateVersion": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Minimum version of the monorepo template required"
    },
    "license": {
      "type": "string",
      "description": "License identifier (e.g., MIT, Apache-2.0)"
    },
    "repository": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["git"]
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "description": "Repository information for the feature"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9-]+(:\\d+\\.\\d+\\.\\d+)?$"
      },
      "uniqueItems": true,
      "description": "Other features this feature depends on (with optional version)"
    },
    "conflicts": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$"
      },
      "uniqueItems": true,
      "description": "Features that conflict with this feature"
    },
    "npmPackages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/npmPackage"
      },
      "description": "NPM packages to install"
    },
    "templates": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/template"
      },
      "description": "Template files to generate"
    },
    "scripts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/script"
      },
      "description": "Scripts to add to package.json files"
    },
    "environmentVariables": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/environmentVariable"
      },
      "description": "Environment variables required by the feature"
    },
    "configurationFiles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/configurationFile"
      },
      "description": "Configuration files to create or modify"
    },
    "postInstallInstructions": {
      "type": "string",
      "description": "Instructions to display after installation"
    },
    "documentation": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "quickStart": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "npmPackage": {
      "type": "object",
      "required": ["name", "version"],
      "properties": {
        "name": {
          "type": "string",
          "description": "NPM package name"
        },
        "version": {
          "type": "string",
          "description": "Version or version range"
        },
        "dev": {
          "type": "boolean",
          "default": false,
          "description": "Whether this is a dev dependency"
        },
        "workspace": {
          "type": "string",
          "description": "Specific workspace to install in (default: root)"
        },
        "optional": {
          "type": "boolean",
          "default": false,
          "description": "Whether this package is optional"
        }
      }
    },
    "template": {
      "type": "object",
      "required": ["sourcePath", "targetPath"],
      "properties": {
        "sourcePath": {
          "type": "string",
          "description": "Path to template file relative to feature definition"
        },
        "targetPath": {
          "type": "string",
          "description": "Target path in the project (supports variables)"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Variables available in the template"
        },
        "condition": {
          "type": "string",
          "description": "JavaScript expression to evaluate whether to include this template"
        },
        "merge": {
          "type": "boolean",
          "default": false,
          "description": "Whether to merge with existing file"
        },
        "mergeStrategy": {
          "type": "string",
          "enum": ["append", "prepend", "replace", "json-merge", "custom"],
          "default": "replace",
          "description": "How to merge with existing files"
        },
        "permissions": {
          "type": "string",
          "pattern": "^[0-7]{3}$",
          "description": "File permissions (e.g., '755' for executables)"
        }
      }
    },
    "script": {
      "type": "object",
      "required": ["name", "command"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Script name in package.json"
        },
        "command": {
          "type": "string",
          "description": "Command to execute"
        },
        "description": {
          "type": "string",
          "description": "Description of what the script does"
        },
        "workspace": {
          "type": "string",
          "description": "Specific workspace to add script to"
        },
        "replace": {
          "type": "boolean",
          "default": false,
          "description": "Whether to replace existing script"
        }
      }
    },
    "environmentVariable": {
      "type": "object",
      "required": ["name", "required"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[A-Z][A-Z0-9_]*$",
          "description": "Environment variable name"
        },
        "value": {
          "type": "string",
          "description": "Default value (can contain placeholders)"
        },
        "description": {
          "type": "string",
          "description": "Description of the variable's purpose"
        },
        "required": {
          "type": "boolean",
          "description": "Whether this variable must be set"
        },
        "example": {
          "type": "string",
          "description": "Example value"
        },
        "validation": {
          "type": "string",
          "description": "Regex pattern for validation"
        }
      }
    },
    "configurationFile": {
      "type": "object",
      "required": ["path", "content"],
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to configuration file"
        },
        "content": {
          "type": ["string", "object"],
          "description": "Content of the file (string or JSON)"
        },
        "format": {
          "type": "string",
          "enum": ["json", "yaml", "toml", "env", "text"],
          "description": "File format"
        },
        "merge": {
          "type": "boolean",
          "default": false,
          "description": "Whether to merge with existing file"
        },
        "mergeStrategy": {
          "type": "string",
          "enum": ["deep-merge", "shallow-merge", "append", "prepend", "replace"],
          "default": "replace"
        }
      }
    }
  }
}
